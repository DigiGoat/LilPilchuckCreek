name: Deploy site to Pages

on:
  # Runs on pushes targeting the default branch
  push:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Run once a day to check if the site is up to date
  schedule:
    - cron: '0 3 * * *' # At 3AM every day

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  BUILD_PATH: "." # default value when not using subfolders
  YARN_IGNORE_ENGINES: true
  # BUILD_PATH: subfolder

jobs:
  check_branch:
    name: Check Branch
    if: github.ref_name == github.event.repository.default_branch
    runs-on: ubuntu-latest
    steps:
      - name: Verify branch
        run: |
           echo "Branch is the default branch: ${{ github.ref_name }}"

  check_pages:
    name: Check Github Pages
    runs-on: ubuntu-latest
    needs: check_branch
    outputs:
      enabled: ${{ steps.check_pages.outputs.enabled }}
    steps:
      - name: Check if Pages are enabled
        id: check_pages
        run: |
            if ! gh api /repos/$GITHUB_REPOSITORY/pages; then
              echo "::warning:: Pages are disabled, skipping deployment"
              echo "enabled=false" >> $GITHUB_OUTPUT
            else
              echo "enabled=true" >> $GITHUB_OUTPUT
            fi
        env:
          GH_TOKEN: ${{ github.token }}
  check_firebase:
    name: Check Firebase
    runs-on: ubuntu-latest
    needs: check_branch
    outputs:
      enabled: ${{ steps.check_firebase.outputs.enabled }}
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
        cache: yarn
        cache-dependency-path: yarn.lock

    - name: Install Dependencies
      run: yarn install

    - name: Check if Firebase is configured
      id: check_firebase
      run: |
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
        if ! npx firebase hosting:sites:list --project "$REPO_NAME"; then
          echo "::warning:: Firebase isn't configured, skipping deployment"
          echo "enabled=false" >> $GITHUB_OUTPUT
        else
          echo "enabled=true" >> $GITHUB_OUTPUT
        fi
  build:
    name: Build
    needs:
      - check_branch
      - check_pages
      - check_firebase
    if: needs.check_pages.outputs.enabled == 'true' || needs.check_firebase.outputs.enabled == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Setup Pages
        if: needs.check_pages.outputs.enabled == 'true'
        id: pages
        uses: actions/configure-pages@v5

      - name: Install dependencies
        run: yarn install

      - name: Fix version
        if: github.ref_name == 'main'
        run: yarn fix-version

      - name: Build Project
        run: yarn deploy ${{  vars.PAGE_URL || steps.pages.outputs.base_url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Firebase
        if: needs.check_firebase.outputs.enabled == 'true'
        run: |
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          npx firebase deploy --project "$REPO_NAME" -m "Deployed via GitHub Actions"

      - name: Upload artifact
        if: needs.check_pages.outputs.enabled == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/web-ui/browser

  deploy:
    if: needs.check_pages.outputs.enabled == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs:
      - build
      - check_pages
    runs-on: ubuntu-latest
    name: Deploy

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
